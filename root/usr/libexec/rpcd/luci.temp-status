#!/usr/bin/env lua

local json = require "luci.jsonc"
local fs   = require "nixio.fs"

local sysHwmon   = "/sys/class/hwmon"
local sysThermal = "/sys/class/thermal"

local function readFile(path)
	local s = fs.readfile(path)
	return s and (s:gsub("^%s+", ""):gsub("%s+$", ""))
end

local function list()
	io.write('{"getTempStatus":{}}')
end

local function getTempStatus()
	local sensors = {}
	-- /sys/class/hwmon
	local dir = fs.dir(sysHwmon)
	if dir then
		local hwmon = {}
		for item in dir do
			if item:match("^hwmon[0-9]+$") then
				local number = tonumber(item:match("[0-9]+"))
				local temp   = readFile(string.format("%s/%s/temp1_input", sysHwmon, item))
				local title  = readFile(string.format("%s/%s/name", sysHwmon, item))
				if number ~= nil and temp ~= nil then
					hwmon[#hwmon + 1] = {
						number = number, item = item, temp = tonumber(temp), title = title }
				end
			end
		end
		if #hwmon > 0 then
			sensors["0"] = hwmon
		end
	end
	-- /sys/class/thermal
	local dir   = fs.dir(sysThermal)
	if dir then
		local thermal = {}
		for item in dir do
			if item:match("^thermal_zone[0-9]+$") then
				local number = tonumber(item:match("[0-9]+"))
				local temp   = readFile(string.format("%s/%s/temp", sysThermal, item))
				local title  = readFile(string.format("%s/%s/type", sysThermal, item))
				if number ~= nil and temp ~= nil then
					thermal[#thermal + 1] = {
						number = number, item = item, temp = tonumber(temp), title = title }
				end
			end
		end
		if #thermal > 0 then
			sensors["1"] = thermal
		end
	end
	io.write(json.stringify(sensors))
end

if arg[1] == "list" then
	list()
elseif arg[1] == "call" and arg[2] == "getTempStatus" then
	getTempStatus()
end

os.exit(0)
